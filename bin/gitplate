#!/usr/bin/env ruby
# 1.9 adds realpath to resolve symlinks; 1.8 doesn't
# have this method, so we add it so we get resolved symlinks
# and compatibility
unless File.respond_to? :realpath
  class File #:nodoc:
    def self.realpath path
      return realpath(File.readlink(path)) if symlink?(path)
      path
    end
  end
end

$: << File.expand_path(File.dirname(File.realpath(__FILE__)) + '/../lib')

require 'rubygems'
require 'rainbow'
require 'gli'
require 'gli_version'
require 'gitplate/gitplate'
require 'gitplate/plate'

include GLI

program_desc 'Generates a directory structure from a git repository'

version Gitplate::VERSION

desc 'Install the gitplate'
long_desc <<EOS
This will create a new git repository based on a copy of the repository specified. If a plate file exists in the
repository then this will be ran against the new project
EOS
arg_name 'project_name plate_repository'
command :install do |c|
  c.action do |g, options, args|
    if args.length < 2
      raise 'You must specify the name of the new project and the url of the git repository'
    end
    
    Gitplate.install args[0], args[1]
  end
end

pre do |global,command,options,args|
  if (global[:v])
    puts Gitplate::VERSION
    false
  end
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit GLI.run(ARGV)
